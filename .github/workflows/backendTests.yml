name: backend tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: songregistry
          MYSQL_USER: bart
          MYSQL_PASSWORD: root
        ports:
          - 3306:3306
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build backend with Maven
      run: mvn -B clean package --file ${{ github.workspace }}/songregistry-backend/pom.xml

    - name: Install Docker Compose
      run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y
          
    - name: Shut down existing services
      run: docker-compose -f ${{ github.workspace }}/songregistry-backend/compose.yaml down || true

    - name: Build Docker image
      run: |
          docker build -t songregistry-container ./songregistry-backend

    - name: Run tests with Docker Compose
      run: |
        docker-compose -f ${{ github.workspace }}/songregistry-backend/compose.yaml up --build -d
        sleep 30 # wait for services to be ready
        mvn -B test --file ${{ github.workspace }}/songregistry-backend/pom.xml

    - name: Shut down services
      run: docker-compose -f ${{ github.workspace }}/songregistry-backend/compose.yaml down

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.9.0
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/songregistry-backend:latest
          context: ./songregistry-backend
